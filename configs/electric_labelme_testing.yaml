data:
  test:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: core.data.labelme_dataset
        class: LabelmeDataset
        LabelmeDataset:
          image_size: 416
          dirnames:
            - '''dataset/electronic_components/valid/'''
          image_patterns: ['''*.jpg''', '''*.JPG''']
          label_patterns: ['''*.json''']
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          classes:
            capacitor: 0
            diode: 1
            IC: 2
            resistor: 3
            transistor: 4
      batch_size: 8
      shuffle: False
      num_workers: 12
      pin_memory: True
      drop_last: False
      collate_fn: 'lambda batch:tuple(zip(*batch))'

model:
  module: core.model.model
  class: Model
  Model:
    in_channels: 3
    num_classes: 5
    iou_threshold: 0.2
    score_threshold: 0.5
    anchors: [
      [[116.48, 91.52], [158.08, 199.68], [374.4, 324.48]],  # S = 13
      [[29.12, 62.4 ], [62.4, 45.76], [58.24, 120.64]],  # S = 26
      [[8.32, 12.48], [16.64, 29.12], [33.28, 24.96]],  # S = 52
    ]

metric:
  module: core.handlers.evaluator
  class: Metrics
  Metrics:
    metrics:
      coco_eval:
        module: core.metric.COCO_eval
        class: COCOEvaluator
        COCOEvaluator:
          image_size: 416
          detection_path: '''checkpoint/electronic_components/2207081604/det.json'''
          ground_truth_path: '''checkpoint/electronic_components/2207081604/gt.json'''
          classes:
            capacitor: 0
            diode: 1
            IC: 2
            resistor: 3
            transistor: 4
          output_transform: 'lambda x: (x[0], x[1], x[2])'

predictor:
  module: core.handlers.predictor
  class: Predictor
  Predictor:
    image_size: 416
    output_dir: '''checkpoint/electronic_components/2207081604/prediction/'''
    classes:
      capacitor: [[128, 0, 0], 0]  # color, class_idx, area_threshold
      diode: [[0, 128, 0], 1]
      IC: [[128, 128, 0], 2]
      resistor: [[0, 0, 128], 3]
      transistor: [[128, 0, 128], 4]
    output_transform: 'lambda x: (x[0], x[1])'  # preds, image_infos

evaluator:
  module: core.engine
  class: Evaluator
  Evaluator:
    data: config['data']['test']
    model: config['model']
    metric: config['metric']
    predictor: config['predictor']
